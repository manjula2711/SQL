CREATE TABLE CAR(
CAR_NO INT,
CAR_NAME VARCHAR(40),
CAR_PRICE INT,
CAR_QUANTITY INT
);

INSERT INTO CAR VALUES(112,'TESLA',120000,2),
(113,'BMW',140000,6),
(114,'AUDI',160000,3),
(115,'MARUTI',230000,2),
(116,'MAHINDRA',120000,4);

SELECT * FROM CAR;

SELECT COUNT(CAR_NAME),CAR_PRICE FROM CAR GROUP BY CAR_PRICE;

SELECT COUNT(CAR_NAME) AS COUNT_NUMBER,CAR_PRICE FROM CAR GROUP BY CAR_PRICE;

SELECT COUNT(CAR_NAME) FROM CAR GROUP BY CAR_PRICE HAVING CAR_PRICE > 120000;

SELECT COUNT(*) FROM CAR GROUP BY CAR_PRICE HAVING CAR_PRICE > 120000;

CREATE TABLE VISIT(
ENTRY_DATE DATE,
PRICE INT,
DURATION INT);

SELECT * FROM VISIT;

INSERT INTO VISIT VALUES ('2023-5-1',1000,30),
('2023-5-2',15000,40),
('2023-5-3',2000,45),
('2023-5-4',3200,60),
('2023-5-5',4000,45);
INSERT INTO VISIT VALUES ('2023-5-5',4000,30);

SELECT ENTRY_DATE, COUNT(*) FROM VISIT GROUP BY ENTRY_DATE;

-- EXTRACT KEYWORD EXAMPLES

SELECT EXTRACT(YEAR FROM ENTRY_DATE) AS YEAR ,
EXTRACT(MONTH FROM ENTRY_DATE) AS MONTH,
EXTRACT(DAY FROM ENTRY_DATE) AS DAY,
ROUND(AVG(PRICE),2) FROM VISIT
GROUP BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE),EXTRACT(DAY FROM ENTRY_DATE)
ORDER BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE);

SELECT * FROM VISIT;

SELECT ENTRY_DATE, ROUND(AVG(PRICE),3) AS AVG_PRICE FROM VISIT GROUP BY ENTRY_DATE HAVING COUNT(*) > 1 ORDER BY ENTRY_DATE;
SELECT ENTRY_DATE, ROUND(AVG(PRICE),3) AS AVG_PRICE FROM VISIT GROUP BY ENTRY_DATE HAVING COUNT(*) > 3 ORDER BY ENTRY_DATE;


SELECT ENTRY_DATE,ROUND(AVG(PRICE),3) AS AVG_PRICE FROM VISIT WHERE DURATION > 30
GROUP BY ENTRY_DATE HAVING COUNT(*) > 0 ORDER BY ENTRY_DATE;

SELECT * FROM CUSTOMER;

SELECT CITY , COUNT(*) AS CUSTOMER_CITY FROM CUSTOMER GROUP BY CITY;

CREATE TABLE EMPLOYEE(
EMP_ID INT,
NAME VARCHAR(30),
AGE INT,
COUNTRY VARCHAR(30)
);
SELECT * FROM EMPLOYEE;
INSERT INTO EMPLOYEE VALUES(100,'CHANDU',40,'INDIA'),
(101,'CHANDHANA',34,'INDIA'),
(102,'AARTHI',35,'AMERICA'),
(103,'BHAVANA',42,'JAPAN'),
(104,'CHARITHA',40,'FRANCE'),
(105,'DIVYA',36,'JAPAN');

SELECT COUNT(COUNTRY) AS COUNTRY_NO , COUNTRY FROM EMPLOYEE GROUP BY COUNTRY HAVING COUNT(COUNTRY) >= 2;

SELECT COUNTRY,COUNT(COUNTRY) FROM EMPLOYEE GROUP BY COUNTRY HAVING MIN(AGE) >= 30;

SELECT COUNTRY,COUNT(COUNTRY) FROM EMPLOYEE GROUP BY COUNTRY HAVING MAX(AGE) >= 30;

CREATE TABLE MANAGER(
ID INT,
NAME VARCHAR(30),
GENDER VARCHAR(20),
SALARY INT);

SELECT * FROM MANAGER;

INSERT INTO MANAGER VALUES(101,'ROHITH','MALE',100000),
(102,'DHANUSH','MALE',23000),
(103,'KHYATI','FEMALE',15000),
(104,'KAIF','MALE',10000),
(105,'HEMA','FEMALE',25000);
INSERT INTO MANAGER VALUES(106,'KAIF','MALE',100000);

SELECT NAME,SUM(SALARY) AS TOTAL_SALARY FROM MANAGER GROUP BY NAME HAVING SUM(SALARY) > 15000 ORDER BY NAME;

SELECT AGE FROM EMPLOYEE GROUP BY AGE HAVING COUNT(AGE) >= 2;

SELECT GENDER,MAX(SALARY) AS MAX_SALARY FROM MANAGER GROUP BY GENDER HAVING MAX(SALARY) < 30000;

SELECT GENDER,MAX(SALARY) AS MAX_SALARY FROM MANAGER GROUP BY GENDER HAVING MIN(SALARY) < 30000;

-- -------------------------------------------------------------------------------------------------
DELIMITER //
CREATE PROCEDURE GetManagerInfo()
 BEGIN
   select * from MANAGER ;
 END //
 
 CALL GetManagerInfo()
 -- ----------------------------------------------------------------------------------------
DELIMITER //
CREATE PROCEDURE GetEmployeeAge()
 BEGIN
   select * from employee where age = 40 ;
 END //
 
 CALL GetEmployeeAge()
-- -------------------------------------------------------------------------------------------

select name from manager order by rand() limit 2;


